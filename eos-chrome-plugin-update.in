#!/bin/bash -e
# Copyright (C) 2016 Endless Mobile, Inc.
# Licensed under the GPLv2
#
# Simple launcher script to select the right updated
# based on the current kernel architecture.

UPDATER_CONF_FILE="@sysconfdir@/default/eos-chrome-plugin-update"

# To be defined below
DOWNLOAD_URL=
UPDATER_COMMAND=
DISABLED_PRODUCTS="fixme"

# Check whether there's a custom URL defined first
if [ -f "${UPDATER_CONF_FILE}" ]; then
    while IFS='=' read key value; do
        case "$key" in
            "HTTP_URL") DOWNLOAD_URL="$value" ;;
            *) ;;
        esac
    done < ${UPDATER_CONF_FILE}
fi

# Read "eos-image-version" attr from /sysroot or / to find product
image=$(attr -q -g eos-image-version /sysroot 2>/dev/null ) || true
if [ "${image}" = "" ]; then
    image=$(attr -q -g eos-image-version / 2>/dev/null ) || true
fi
product=$(echo "${image}" | cut -d- -f1)

# Skip plugin download on disabled products
for p in ${DISABLED_PRODUCTS}; do
    if [ "${p}" = "${product}" ]; then
        echo "Automatic updater disabled on ${product} product."
        exit 0
    fi
done

if [ -n "${DOWNLOAD_URL}" ]; then
    # Need to include the URL along with the command
    UPDATER_COMMAND="eos-chrome-plugin-update-http ${DOWNLOAD_URL}"
else
    # No HTTP_URL defined, fallback to the usual methods
    ARCH=`arch`
    case ${ARCH} in
        x86_64)
            UPDATER_COMMAND="eos-chrome-plugin-update-upstream"
            ;;
        arm*)
            echo "Automatic updater disabled for ${ARCH} architecture (it would download too much data)."
            echo "To update plugins manually, please run: @pkglibexecdir@/eos-chrome-plugin-update-cros"
            exit 0
            ;;
        *)
            echo "Unsupported architecture ${ARCH}"
            exit 1
            ;;
    esac
fi

exec @pkglibexecdir@/${UPDATER_COMMAND}
